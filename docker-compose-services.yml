version: '3.8'

networks:
  traefik-public:
    external: true
  services-internal:
    external: true
  database-internal:
    external: true

services:
  # n8n
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    networks:
      - services-internal
      - database-internal
      - traefik-public
    environment:
      - N8N_HOST=${DOMAIN}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://webhooks.${DOMAIN}
      - GENERIC_TIMEZONE=${TIMEZONE}
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_SECURE_COOKIE=true
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresql
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
    volumes:
      - n8n-data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      
      # Router per interfaccia admin (via Tailscale)
      - "traefik.http.routers.n8n.rule=Host(`n8n.${TAILSCALE_DOMAIN}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=tailscale"
      - "traefik.http.routers.n8n.middlewares=authentik@docker"
      - "traefik.http.routers.n8n.service=n8n-svc"
      
      # Router per webhook pubblici (via Cloudflare)
      - "traefik.http.routers.n8n-webhooks.rule=Host(`webhooks.${DOMAIN}`)"
      - "traefik.http.routers.n8n-webhooks.entrypoints=websecure"
      - "traefik.http.routers.n8n-webhooks.tls.certresolver=cloudflare"
      - "traefik.http.routers.n8n-webhooks.service=n8n-svc"
      - "traefik.http.services.n8n-svc.loadbalancer.server.port=5678"

volumes:
  n8n-data:
  splunk-data: